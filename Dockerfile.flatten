# Flatten the configured VDSM image to reduce size
# This keeps only the configured disk images and removes Playwright/Chromium
# Note: PAT file already removed during build by build-image.sh

# Extract configured disk images from checkpoint
ARG CHECKPOINT_IMAGE=ghcr.io/vdsm-ci/vdsm-ci:ckpt-final
ARG QEMU_CPU_FLAGS="-cpu Westmere,-invtsc"
ARG VARIANT=kvm
FROM ${CHECKPOINT_IMAGE} AS checkpoint

# Get qcow2 conversion script and patched entry.sh from patched image
FROM vdsm/virtual-dsm:patched AS patched

# Final image: original base + qcow2 support + configured disks
FROM vdsm/virtual-dsm:7.41@sha256:3bec39b40ae702cdd6dc5ec25adc350ea47b01a722d60cc0805ab91969fb41cb AS base

# Add qcow2 conversion support (copy pre-patched files)
COPY --from=patched /run/convert.sh /run/convert.sh
COPY --from=patched /run/entry.sh /run/entry.sh

# Copy only the configured disk images from checkpoint
COPY --from=checkpoint /storage/*.qcow2 /storage/
COPY --from=checkpoint /storage/*.img /storage/
COPY --from=checkpoint /storage/dsm.* /storage/

# Set loadvm argument to restore from final snapshot
# Use configured CPU flags for broad compatibility
# Note: 'final' snapshot always exists (created even when checkpoints disabled)
ARG QEMU_CPU_FLAGS
ENV ARGUMENTS="${QEMU_CPU_FLAGS} -loadvm final"
ENV DISK_FMT=qcow2

# KVM variant (default)
FROM base AS variant-kvm

# TCG variant with KVM disabled
FROM base AS variant-tcg
ENV KVM=N

# Select final variant based on build arg
ARG VARIANT=kvm
FROM variant-${VARIANT} AS final

# Add labels for image management
ARG VARIANT
LABEL org.opencontainers.image.vendor="vdsm-ci"
LABEL org.opencontainers.image.description="VDSM CI image (${VARIANT} variant)"
LABEL vdsm-ci.image.type="final"
LABEL vdsm-ci.variant="${VARIANT}"
LABEL vdsm-ci.managed="true"

# Expose DSM and storage service ports
# DSM HTTP
EXPOSE 5000
# iSCSI
EXPOSE 3260
# SMB
EXPOSE 445
# NFS
EXPOSE 2049
